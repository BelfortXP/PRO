Timer_annotation
//counter_12, counter_min, counter_hour => counter_second, counter_min, counter_hour
@input
clk		system clock
rst 	enable signal
in 		in fact, it is 0 for second carry

sec 	the reset signal for second
min 	the reset signal for minute
hour 	the reset signal for hour

quickset_min 	enable signal for qucikset minute
quickset_hour 	enable signal for quickset hour

[3:0] set_num1 	input time when beep make void
[3:0] set_num2

set_alarm_min	set signal of the  time for the beep to make voice
set_alarm_hour
set_alarm_sec

alarm_on 		if the beep need to make voice

@output
set_light1		when set beep time, we need to
set_light2		turn on corresponding led to show.

[7:0] seg7
[7:0] number

beep_out 	bind to specific pin to make voice

@function
the top level framework for the clock, integrated all module built before to achieve walking the clock normally, or run faster to adapt the time, and let beep to make voice.

@implementation
For the clk, we need 5 clocks, which are 1Hz (the normal one), 4Hz (the faster one), 64Hz, 512Hz and 1kHz. 
step 1.
we make three frequency for second, minute and hour repectively.
there are three input button signal which are 'sec', 'min', 'hour'.
the function is to choose whether we need to change clock time
much faster. if yes, for second time, it will directly be set to zero. 
for minute and hour time, they will change their value four times per second.
thus we get three quick_change signal for second, minute and hour, 
which are quickset_sec, quickset_min, quickset_hour.

step 2.
we use three quickset enable signal combined with rst signal to generate the real clock signal
for each time. for second, the clock signal is 1Hz or just remain stable forever. for minute,
if quickset_min turns on, then minute value will changes 4 times per second, otherwise it will
only change when a carry from second comes up. for the same, if quickset_hour turns on, then hour
value will changes 4 times per second, otherwise it will only change when a carry from minute appears.

step 3.
from step 2, we get three clocks corresponding to second, minute and hour time. therefore the counter at
each clock dick is neccessary. here we use counter_12 to count second, counter_min to count minute, counter_3
to count hour.

step 4.
it's not time to put clock time on seven segment led. here we still have three input button signal which let
us to modify the beep time. only one of three can be turned on each time. if one is turned on, then
through open the switch can we put the beep time into the chip. there are two ways to show the input time,
one is from the led when we choose the switches, the another is to put the time on the screen.

step 5.
combine step 3 and step 4, there are two signals we should put on screen, one is the clock time, another is
set up time. the latter one only shows when the set signal is on. after we put all signal on screen,
we just need to bind the time with seven segment signal. that's all.
